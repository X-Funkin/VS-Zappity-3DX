[gd_scene load_steps=30 format=2]

[ext_resource path="res://assets/scenes/OS Window.gd" type="Script" id=1]
[ext_resource path="res://assets/fonts/Consola.tres" type="DynamicFontData" id=2]

[sub_resource type="VisualShaderNodeScalarOp" id=6]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=7]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorDecompose" id=8]

[sub_resource type="VisualShaderNodeCompare" id=9]
default_input_values = [ 0, 0.0, 1, 0.5, 2, 1e-05 ]
function = 5

[sub_resource type="VisualShaderNodeScalarUniform" id=10]
uniform_name = "Boarder_Load"

[sub_resource type="VisualShaderNodeCompare" id=11]
function = 5

[sub_resource type="VisualShaderNodeScalarOp" id=12]
operator = 2

[sub_resource type="VisualShaderNodeColorUniform" id=13]
uniform_name = "Line_Color"

[sub_resource type="VisualShaderNodeVectorScalarMix" id=14]

[sub_resource type="VisualShader" id=15]
resource_local_to_scene = true
code = "shader_type canvas_item;
uniform vec4 Line_Color : hint_color;
uniform float Boarder_Load;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:8
	vec3 n_out8p0 = Line_Color.rgb;
	float n_out8p1 = Line_Color.a;

// Input:2
	vec3 n_out2p0 = vec3(UV, 0.0);

// VectorDecompose:3
	float n_out3p0 = n_out2p0.x;
	float n_out3p1 = n_out2p0.y;
	float n_out3p2 = n_out2p0.z;

// Compare:4
	float n_in4p1 = 0.50000;
	bool n_out4p0 = n_out3p1<=n_in4p1;

// ScalarUniform:5
	float n_out5p0 = Boarder_Load;

// Compare:6
	bool n_out6p0 = n_out3p0<=n_out5p0;

// ScalarOp:7
	float n_out7p0 = (n_out4p0 ? 1.0 : 0.0) * (n_out6p0 ? 1.0 : 0.0);

// VectorScalarMix:9
	vec3 n_in9p0 = vec3(0.00000, 0.00000, 0.00000);
	vec3 n_out9p0 = mix(n_in9p0, n_out8p0, n_out7p0);

// ScalarOp:10
	float n_out10p0 = n_out8p1 * n_out7p0;

// Output:0
	COLOR.rgb = n_out9p0;
	COLOR.a = n_out10p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -71.6213, -127 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 960, 140 )
nodes/fragment/2/node = SubResource( 7 )
nodes/fragment/2/position = Vector2( -300, 120 )
nodes/fragment/3/node = SubResource( 8 )
nodes/fragment/3/position = Vector2( -120, 100 )
nodes/fragment/4/node = SubResource( 9 )
nodes/fragment/4/position = Vector2( 180, 20 )
nodes/fragment/5/node = SubResource( 10 )
nodes/fragment/5/position = Vector2( -100, 200 )
nodes/fragment/6/node = SubResource( 11 )
nodes/fragment/6/position = Vector2( 140, 180 )
nodes/fragment/7/node = SubResource( 12 )
nodes/fragment/7/position = Vector2( 440, 200 )
nodes/fragment/8/node = SubResource( 13 )
nodes/fragment/8/position = Vector2( 440, 20 )
nodes/fragment/9/node = SubResource( 14 )
nodes/fragment/9/position = Vector2( 720, 20 )
nodes/fragment/10/node = SubResource( 6 )
nodes/fragment/10/position = Vector2( 740, 180 )
nodes/fragment/connections = PoolIntArray( 2, 0, 3, 0, 3, 1, 4, 0, 5, 0, 6, 1, 3, 0, 6, 0, 4, 0, 7, 0, 6, 0, 7, 1, 7, 0, 9, 2, 8, 0, 9, 1, 9, 0, 0, 0, 8, 1, 10, 0, 7, 0, 10, 1, 10, 0, 0, 1 )

[sub_resource type="ShaderMaterial" id=16]
resource_local_to_scene = true
shader = SubResource( 15 )
shader_param/Line_Color = Color( 1, 1, 1, 1 )
shader_param/Boarder_Load = 1.0

[sub_resource type="DynamicFont" id=1]
font_data = ExtResource( 2 )

[sub_resource type="VisualShaderNodeScalarOp" id=17]
default_input_values = [ 0, 0.0, 1, 2.0 ]
operator = 2

[sub_resource type="VisualShaderNodeTextureUniform" id=2]
uniform_name = "Window_Texture"
color_default = 1

[sub_resource type="VisualShaderNodeInput" id=18]
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarUniform" id=19]
uniform_name = "Show"

[sub_resource type="VisualShaderNodeDotProduct" id=20]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 1, 1, 0 ) ]

[sub_resource type="VisualShaderNodeScalarConstant" id=21]
constant = 1.0

[sub_resource type="VisualShaderNodeCompare" id=22]
function = 3

[sub_resource type="VisualShaderNodeScalarOp" id=23]
default_input_values = [ 0, 0.0, 1, 2.0 ]
operator = 2

[sub_resource type="VisualShaderNodeVectorScalarMix" id=24]

[sub_resource type="VisualShader" id=3]
resource_local_to_scene = true
code = "shader_type canvas_item;
uniform sampler2D Window_Texture : hint_black;
uniform float Show;



void vertex() {
// Output:0

}

void fragment() {
// TextureUniform:2
	vec3 n_out2p0;
	float n_out2p1;
	{
		vec4 n_tex_read = texture(Window_Texture, UV.xy);
		n_out2p0 = n_tex_read.rgb;
		n_out2p1 = n_tex_read.a;
	}

// ScalarUniform:4
	float n_out4p0 = Show;

// ScalarOp:8
	float n_in8p1 = 2.00000;
	float n_out8p0 = n_out4p0 * n_in8p1;

// Input:3
	vec3 n_out3p0 = vec3(UV, 0.0);

// DotProduct:5
	vec3 n_in5p1 = vec3(1.00000, 1.00000, 0.00000);
	float n_out5p0 = dot(n_out3p0, n_in5p1);

// Compare:7
	bool n_out7p0 = n_out8p0>=n_out5p0;

// VectorScalarMix:9
	vec3 n_in9p0 = vec3(0.00000, 0.00000, 0.00000);
	vec3 n_out9p0 = mix(n_in9p0, n_out2p0, (n_out7p0 ? 1.0 : 0.0));

// ScalarOp:10
	float n_out10p0 = (n_out7p0 ? 1.0 : 0.0) * n_out2p1;

// Output:0
	COLOR.rgb = n_out9p0;
	COLOR.a = n_out10p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -71.6213, -127 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 900, 140 )
nodes/fragment/2/node = SubResource( 2 )
nodes/fragment/2/position = Vector2( -80, 140 )
nodes/fragment/3/node = SubResource( 18 )
nodes/fragment/3/position = Vector2( -100, 40 )
nodes/fragment/4/node = SubResource( 19 )
nodes/fragment/4/position = Vector2( -100, -20 )
nodes/fragment/5/node = SubResource( 20 )
nodes/fragment/5/position = Vector2( 220, 80 )
nodes/fragment/6/node = SubResource( 21 )
nodes/fragment/6/position = Vector2( 180, 220 )
nodes/fragment/7/node = SubResource( 22 )
nodes/fragment/7/position = Vector2( 400, -60 )
nodes/fragment/8/node = SubResource( 23 )
nodes/fragment/8/position = Vector2( 160, -60 )
nodes/fragment/9/node = SubResource( 24 )
nodes/fragment/9/position = Vector2( 660, 20 )
nodes/fragment/10/node = SubResource( 17 )
nodes/fragment/10/position = Vector2( 540, 160 )
nodes/fragment/connections = PoolIntArray( 3, 0, 5, 0, 5, 0, 7, 1, 4, 0, 8, 0, 8, 0, 7, 0, 2, 0, 9, 1, 7, 0, 9, 2, 9, 0, 0, 0, 7, 0, 10, 0, 2, 1, 10, 1, 10, 0, 0, 1 )

[sub_resource type="ViewportTexture" id=4]
viewport_path = NodePath("Viewport")

[sub_resource type="ShaderMaterial" id=5]
resource_local_to_scene = true
shader = SubResource( 3 )
shader_param/Show = 1.0
shader_param/Window_Texture = SubResource( 4 )

[sub_resource type="Animation" id=27]
resource_name = "Close"
tracks/0/type = "bezier"
tracks/0/path = NodePath("Line2D:material:shader_param/Boarder_Load")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"points": PoolRealArray( 1, -0.5, 0, 0.25, 0, 0, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0, 1 )
}
tracks/1/type = "bezier"
tracks/1/path = NodePath("VBoxContainer/Main/ColorRect:material:shader_param/Show")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"points": PoolRealArray( 1, -0.5, 0, 0.25, 0, 0, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0, 1 )
}
tracks/2/type = "bezier"
tracks/2/path = NodePath("VBoxContainer/Title:percent_visible")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"points": PoolRealArray( 1, -0.25, 0, 0.25, 0, 0, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0, 1 )
}

[sub_resource type="Animation" id=25]
resource_name = "Open"
tracks/0/type = "bezier"
tracks/0/path = NodePath("Line2D:material:shader_param/Boarder_Load")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"points": PoolRealArray( 0, -0.25, 0, 0.25, 0, 1, -0.5, 0, 0.25, 0 ),
"times": PoolRealArray( 0, 1 )
}
tracks/1/type = "bezier"
tracks/1/path = NodePath("VBoxContainer/Main/ColorRect:material:shader_param/Show")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"points": PoolRealArray( 0, -0.25, 0, 0.25, 0, 1, -0.5, 0, 0.25, 0 ),
"times": PoolRealArray( 0, 1 )
}
tracks/2/type = "bezier"
tracks/2/path = NodePath("VBoxContainer/Title:percent_visible")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"points": PoolRealArray( 0, -0.25, 0, 0.25, 0, 1, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0, 1 )
}

[sub_resource type="Animation" id=26]
length = 0.001
tracks/0/type = "bezier"
tracks/0/path = NodePath("Line2D:material:shader_param/Boarder_Load")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"points": PoolRealArray( 1, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0 )
}
tracks/1/type = "bezier"
tracks/1/path = NodePath("VBoxContainer/Main/ColorRect:material:shader_param/Show")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"points": PoolRealArray( 1, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0 )
}
tracks/2/type = "bezier"
tracks/2/path = NodePath("VBoxContainer/Title:percent_visible")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"points": PoolRealArray( 1, -0.25, 0, 0.25, 0 ),
"times": PoolRealArray( 0 )
}

[node name="OS Window" type="Control"]
anchor_right = 1.0
anchor_bottom = 1.0
script = ExtResource( 1 )
__meta__ = {
"_edit_use_anchors_": false
}
window_title = "Test uyeah loool"
boarder_points = [ NodePath("VBoxContainer/Title/Top Left"), NodePath("VBoxContainer/Title/Top Right"), NodePath("VBoxContainer/Title/Bottom Right"), NodePath("VBoxContainer/Main/Corner Points/Top Right"), NodePath("VBoxContainer/Main/Corner Points/Bottom Right"), NodePath("VBoxContainer/Main/Corner Points/Bottom Left"), NodePath("VBoxContainer/Title/Top Left") ]

[node name="Viewport" type="Viewport" parent="."]
size = Vector2( 1920, 1080 )
transparent_bg = true
usage = 0
render_target_v_flip = true
render_target_update_mode = 3

[node name="Line2D" type="Line2D" parent="."]
material = SubResource( 16 )
points = PoolVector2Array( 0, 0, 144, 0, 164, 17, 1920, 21, 1920, 1080, 0, 1080, 0, 0 )
width = 30.319
default_color = Color( 1, 1, 1, 1 )
texture_mode = 2

[node name="VBoxContainer" type="VBoxContainer" parent="."]
anchor_right = 1.0
anchor_bottom = 1.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Title" type="Label" parent="VBoxContainer"]
margin_right = 144.0
margin_bottom = 17.0
size_flags_horizontal = 0
custom_fonts/font = SubResource( 1 )
text = "Test uyeah loool"
valign = 1

[node name="Top Left" type="Control" parent="VBoxContainer/Title"]
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Top Right" type="Control" parent="VBoxContainer/Title"]
anchor_left = 1.0
anchor_right = 1.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Bottom Right" type="Control" parent="VBoxContainer/Title"]
anchor_left = 1.0
anchor_top = 1.0
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = 20.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Main" type="Control" parent="VBoxContainer"]
margin_top = 21.0
margin_right = 1920.0
margin_bottom = 1080.0
size_flags_horizontal = 3
size_flags_vertical = 3

[node name="Corner Points" type="Control" parent="VBoxContainer/Main"]
anchor_right = 1.0
anchor_bottom = 1.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Top Right" type="Control" parent="VBoxContainer/Main/Corner Points"]
anchor_left = 1.0
anchor_right = 1.0

[node name="Bottom Right" type="Control" parent="VBoxContainer/Main/Corner Points"]
anchor_left = 1.0
anchor_top = 1.0
anchor_right = 1.0
anchor_bottom = 1.0

[node name="Bottom Left" type="Control" parent="VBoxContainer/Main/Corner Points"]
anchor_top = 1.0
anchor_bottom = 1.0

[node name="ColorRect" type="ColorRect" parent="VBoxContainer/Main"]
material = SubResource( 5 )
anchor_right = 1.0
anchor_bottom = 1.0
color = Color( 0, 0, 0, 0 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Window Animations" type="AnimationPlayer" parent="."]
playback_speed = 3.0
anims/Close = SubResource( 27 )
anims/Open = SubResource( 25 )
anims/RESET = SubResource( 26 )

[connection signal="item_rect_changed" from="." to="." method="_on_OS_Window_item_rect_changed"]
[connection signal="resized" from="." to="." method="_on_OS_Window_resized"]
[connection signal="resized" from="VBoxContainer/Title" to="." method="_on_Title_resized"]
[connection signal="resized" from="VBoxContainer/Main/ColorRect" to="." method="_on_ColorRect_resized"]
